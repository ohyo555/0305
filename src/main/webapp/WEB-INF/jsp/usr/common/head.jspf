<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>${pageTitle }</title>
<link rel="stylesheet" href="/resource/common.css" />
<script src="/resource/common.js" defer="defer"></script>

<script src="https://use.fontawesome.com/releases/v5.2.0/js/all.js"></script>

<!-- 테일윈드 불러오기 -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind.min.css" />

<!-- daisy ui 불러오기 -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/daisyui/4.6.1/full.css" />

<!-- flaticon 불러오기 -->
<link rel='stylesheet'
	href='https://cdn-uicons.flaticon.com/2.1.0/uicons-regular-rounded/css/uicons-regular-rounded.css'>

<!-- 폰트어썸 불러오기 -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css">

<!-- 제이쿼리 불러오기 -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

<style>
#my_modal {
	display: none;
	width: 350px;
	padding: 30px 30px 20px 30px;
	background-color: #fefefe;
	border: 1px solid #888;
	border-radius: 10px;
	font-size: 1rem;
}

#my_modal label {
	font-weight: 700;
}

#my_modal>div {
	padding: 3px;
}

.modal_content {
	/* 다른 스타일 속성들... */
	display: flex;
	align-items: center;
	justify-content: center;
	height: 100%; /* 모달 내용을 세로 중앙 정렬하기 위한 스타일 */
	background-size: cover;
}

/* 프로필 */
.profile {
	background-color: lightgray;
	height: 80px;
	width: 80px;
	display: inline-block; /* 인라인 요소로 배치하여 한 줄에 표시되도록 함 */
	background-size: contain; /* 또는 cover */
	background-repeat: no-repeat;
}

.profile_button {
	padding: 3px;
	font-size: 12px;
	height: 25px;
}

.square-box {
	background-color: lightgray;
	height: 100px;
	width: 140px;
	display: inline-block; /* 인라인 요소로 배치하여 한 줄에 표시되도록 함 */
	margin: 3px;
	background-size: contain; /* 또는 cover */
	background-repeat: no-repeat;
	position: relative;
}

.square-box img {
	width: 100%;
	height: auto;
	max-width: 150px; /* 원하는 최대 너비 설정 */
	max-height: 100px; /* 원하는 최대 높이 설정 */
	position: absolute;
	bottom: 0;
}

.modal_button {
	margin: 0px 20px;
	font-size: 12px;
}

#my_modal .modal_close_btn {
	position: absolute;
	top: 5px;
	right: 20px;
	cursor: pointer; /* 추가: 마우스 포인터 모양 변경 */
}

#popup_open_btn {
	display: inline-block;
	width: 50px; /* 원하는 너비로 설정 */
	height: 50px; /* 원하는 높이로 설정 */
	border-radius: 50%; /* 동그란 모양으로 설정 */
	background-image: url('${rq.loginedMember.image }'); /* 이미지 경로 설정 */
	background-size: cover; /* 배경 이미지를 커버로 설정 */
	background-position: center; /* 배경 이미지를 가운데 정렬 */
	background-repeat: no-repeat; /* 배경 이미지 반복 없음 */
	border: none; /* 테두리 없음 */
	cursor: pointer; /* 마우스 포인터 모양 변경 */
	margin: 7px;
}

#popup_open_btn:focus {
	outline: none; /* 포커스 효과 제거 */
}

.pwmodify_button {
	margin: 0;
}
</style>

</head>

<body>
	<header>
		<div class="h-100% flex items-center text-3xl">
			<a class="hover:underline" href="/"><i class="fa-solid fa-house-chimney"></i></a>
			<div class="flex-grow"></div>
			<ul class="flex">
				<li class="mt-5" style="position: relative; z-index: 999;"><a class="hover:underline"
					href="../article/list?boardId=1&page=1"><img width="24" height="24" src="https://img.icons8.com/material-outlined/24/circled-menu.png" alt="circled-menu"/></a>
					<ul>
						<li><a class="hover:underline" href="../member/membership">membership</a></li>
						<li><a class="hover:underline" href="../game/calendar">Game Schedule</a></li>
						<li><a class="hover:underline" href="../game/map">map</a></li>
						<li><a class="hover:underline" href="../article/list?boardId=1&page=1">NOTICE</a></li>
						<li><a class="hover:underline" href="../article/list?boardId=2&page=1">FREE</a></li>
						<li><a class="hover:underline" href="../article/list?boardId=3&page=1">QnA</a></li>
						<li><a class="hover:underline" href="../article/mylist?page=1">MY LIST</a></li>
						<c:if test="${rq.loginedMemberId != 0}">
							<li><a class="hover:underline" href="../article/write">write</a></li>
						</c:if>
					</ul></li>
				<c:if test="${rq.loginedMemberId == 0}">
					<li class="mt-3"><a class="hover:underline" href="../member/login">LOGIN</a></li>
				</c:if>
				<c:if test="${rq.loginedMemberId != 0}">
					<!-- 회원정보 버튼 -->
					<button id="popup_open_btn" class="btn btn-outline" type="button"></button>
					
					<!-- 회원정보 모달 -->
					<div id="my_modal">
						<div id="defaultModalContent">
							<div class="profile" style="background-image: url('${rq.loginedMember.image }'); background-size: cover;"></div>
							<button class="profile_button" onclick="changeprofileContent()">프로필 수정</button>
							<div>
								<label for="username">아이디:</label> ${rq.loginedMember.loginId }
							</div>
							<div>
								<label for="player">응원선수:</label> <select name="favoritePlayer">
									<option value="" selected disabled>선택하세요</option>
									<option value="player1">이소영</option>
									<option value="player2">안예림</option>
									<option value="player3">염혜선</option>
									<option value="player4">김세인</option>
									<option value="player5">노란</option>
									<option value="player6">박은진</option>
									<option value="player7">이예솔</option>
									<option value="player8">메가</option>
								</select>
							</div>
							<div>
								<label for="lv">등급/코드: </label>
								<c:if test="${rq.loginedMember.type == null}">일반 / </c:if>
								<c:if test="${rq.loginedMember.type != null}">${rq.loginedMember.type} / ${rq.loginedMember.membercode}</c:if>
							</div>
						</div>

						<div class="modal_content">
							<div class="square-box reservation"></div>
							<div class="square-box player"
								style="background-image: url('https://kovostoragedev.blob.core.windows.net/kovo-prod/player/female/kgc/shoulder/%E1%84%8B%E1%85%B5%E1%84%89%E1%85%A9%E1%84%8B%E1%85%A7%E1%86%BC_%E1%84%82%E1%85%AE%E1%84%81%E1%85%B5.png');"></div>

						</div>
						<a class="modal_close_btn" onclick="closeModal()">Χ</a>
						<div class="modal_content">
							<button class="modal_button" onclick="changeModalContent()">회원정보 수정</button>
							<button class="modal_button" onclick="logout()">로그아웃</button>
							<button class="modal_button" onclick="del()">탈퇴</button>
						</div>
					</div>

					<!--회원정보-->

					<script>
					
					var modalHistory = []; // 모달 내용을 저장할 배열
					
						var defaultModalContent = document.getElementById('defaultModalContent').innerHTML;
	
				        function openModal() {
				            var modalContentText = document.getElementById('my_modal');
	
				            // 모달이 열릴 때 기본 내용으로 초기화
				            modalContentText.innerHTML = defaultModalContent;
	
				            // 모달 열기 로직 추가...
				        }
			        
					 	function changeModalContent() {
					 	// 모달 내용을 변경하는 코드 예제
					        var modalContentText = document.getElementById('my_modal');
					        // 요소가 존재하는지 확인
					        if (modalContentText) {
					        	// 이전 모달 내용 저장
					        	modalHistory.push(modalContentText.innerHTML);
					        	// 새로운 모달 내용 설정
					            modalContentText.innerHTML = '<div>' +
					            '<label for="loginId">아이디: </label>' +
					            '${rq.loginedMember.loginId}' +
					            '</div>' +
					            '<div>' +
					            '<label for="loginPw">비밀번호 확인: </label>' +
					            '<input type="text" class="input input-ghost w-full max-w-xs autocomplete="off" name="loginPw" style="height: 25px; width: 145px;" required/>' +
					            '<button class="modal_button pwmodify_button" onclick="pwmodify()">변경</button>' +
					            '<div class = "text-xs" style="color: #a32222">※ 회원정보 수정 시 비밀번호를 입력해야합니다.</div>' +
					            '</div>' +
					            '<div>' +
					            '<label for="birth">생년월일: </label>' +
					            '<input type="date" id = "birth" class="input input-ghost w-full max-w-xs autocomplete="off" name="birth" value="${rq.loginedMember.birth}" max="" onchange="updateMaxDate()" style="height: 25px; width: 170px;"/>' +
					            '</div>' +
					            '<div>' +
					            '<label for="mname">이름: </label>' +
					            '<input type="text" class="input input-ghost w-full max-w-xs autocomplete="off" name="mname" value="${rq.loginedMember.mname}" style="height: 25px; width: 200px;"/>' +
					            '</div>' +
					            '<div>' +
					            '<label for="cellphoneNum">전화번호: </label>' +
					            '<input type="text" class="input input-ghost w-full max-w-xs autocomplete="off" name="cellphoneNum" value="${rq.loginedMember.cellphoneNum}" oninput="validateContactNumber(this)" maxlength="11" style="height: 25px; width: 170px;"/>' +
					            '<div class = "text-xs" style="color: #a32222">※ -없이 숫자만 입력가능합니다.</div>' +
					            '</div>' +
					            '<div>' +
					            '<label for="email">이메일: </label>' +
					            '<input type="text" class="input input-ghost w-full max-w-xs autocomplete="off" name="email" value="${rq.loginedMember.email}" style="height: 25px; width: 200px;"/>' +
					            '</div>' +
					            '<div>' +
					            '<label for="address">주소: </label>' +
					            '<input type="text" class="input input-ghost w-full max-w-xs autocomplete="off" name="address" value="${rq.loginedMember.address}" style="height: 25px; width: 200px;"/>' +
					            '</div>' +
					            '<a class="modal_close_btn" onclick="closeModal()">Χ</a>' +
					            '<div class="modal_content">' +
					            '<button class="modal_button" onclick="modify()">수정</button>' +
					            '<button class="modal_button" onclick="logout()">로그아웃</button>' +
					            '<button class="modal_button" onclick="goBack()">뒤로가기</button>' +
					            '</div>';
					            
					            updateMaxDate();
					        }
					    }
					
					 	function changeprofileContent() {
						 	// 모달 내용을 변경하는 코드 예제
						        var modalContentText = document.getElementById('my_modal');

						        // 요소가 존재하는지 확인
						        if (modalContentText) {
						        	// 이전 모달 내용 저장
						        	modalHistory.push(modalContentText.innerHTML);
						        	// 새로운 모달 내용 설정
						            modalContentText.innerHTML =  '<form action="../member/upload" method="post" enctype="multipart/form-data">' +
						            '<input type="file" id="photoInput" name="photoInput" accept="image/*">' +
						            '<button type="button" onclick="uploadPhoto()">사진 업로드</button>' + 
						        	'</form>' + 
						    		'<canvas id="myCanvas" width="100" height="100"></canvas>' +
						            '<a class="modal_close_btn" onclick="closeModal()">Χ</a>';
						        }
						    }
					 	
					 	function uploadPhoto() {
					 	    var fileInput = document.getElementById('photoInput');
					 	    var file = fileInput.files[0];

					 	    if (file) {
					 	        var formData = new FormData();
					 	        formData.append('photo', file);

					 	       fetch('../member/upload', {
					 	    	    method: 'POST',
					 	    	    body: formData
					 	    	})
					 	    	.then(response => {
					 	    	    // HTTP 상태 코드가 200번대가 아닌 경우
					 	    	    if (!response.ok) {
					 	    	        throw new Error(`HTTP error! Status: ${response.status}`);
					 	    	    }

					 	    	    // 텍스트 형식으로 응답 내용을 받아옴
					 	    	    return response.text();
					 	    	})
					 	    	.then(data => {
					 	    		alert(data);
					 	    		closeModal();

					 	    	    // 응답 내용을 그대로 사용하거나 처리
					 	    	    // 예를 들어, HTML 형식의 응답을 모달에 표시하는 등의 작업을 수행할 수 있습니다.
					 	    	})
					 	    	.catch(error => {
					 	    		alert(error);
					 	    	});
					 	    } else {
					 	        alert('Please select a photo to upload.');
					 	    }
					 	}
					 	
			            function modal(id) {
			                var zIndex = 9999;
			                var modal = document.getElementById(id);
			
			                // 모달 div 뒤에 희끄무레한 레이어
			                var bg = document.createElement('div');
			                bg.className = 'modal_bg'; // 클래스 추가
			                bg.setStyle({
			                    position: 'fixed',
			                    zIndex: zIndex,
			                    left: '0px',
			                    top: '0px',
			                    width: '100%',
			                    height: '100%',
			                    overflow: 'auto',
			                    // 레이어 색갈은 여기서 바꾸면 됨
			                    backgroundColor: 'rgba(0,0,0,0.3)'
			                });
			                document.body.append(bg);
			
			                // 닫기 버튼 처리, 시꺼먼 레이어와 모달 div 지우기
			               modal.querySelector('.modal_close_btn').addEventListener('click', function() {
							    bg.remove();
							    modal.style.display = 'none';
							});
			
			                modal.setStyle({
			                    position: 'fixed',
			                    display: 'block',
			                    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',
			
			                    // 시꺼먼 레이어 보다 한칸 위에 보이기
			                    zIndex: zIndex + 1,
			
			                    // div center 정렬
			                    top: '50%',
			                    left: '50%',
			                    transform: 'translate(-50%, -50%)',
			                    msTransform: 'translate(-50%, -50%)',
			                    webkitTransform: 'translate(-50%, -50%)'
			                });
			            }
			
			            // Element 에 style 한번에 오브젝트로 설정하는 함수 추가
			            Element.prototype.setStyle = function(styles) {
			                for (var k in styles) this.style[k] = styles[k];
			                return this;
			            };
			            
			            document.getElementById('popup_open_btn').addEventListener('click', function() {
			                // 모달창 띄우기
			                modal('my_modal');
			            });
			            
			            // 회원정보 수정
			            function modify() {
			                // 모달 내용에서 필요한 값들을 가져옴
			                var loginPw = document.getElementsByName("loginPw")[0].value;
			                var birth = document.getElementsByName("birth")[0].value;
			                var mname = document.getElementsByName("mname")[0].value;
			                var cellphoneNum = document.getElementsByName("cellphoneNum")[0].value;
			                var email = document.getElementsByName("email")[0].value;
			                var address = document.getElementsByName("address")[0].value;

			                // AJAX를 이용하여 서버에 데이터 전송
			                var xhr = new XMLHttpRequest();
			                xhr.open("POST", '../member/doModify', true);
			                xhr.setRequestHeader("Content-Type", "application/json");

			                // 전송할 데이터를 JSON 형태로 변환
			                var data = JSON.stringify({
			                    loginPw: loginPw,
			                    birth: birth,
			                    mname: mname,
			                    cellphoneNum: cellphoneNum,
			                    email: email,
			                    address: address
			                });

			                xhr.onreadystatechange = function () {
			                    if (xhr.readyState == 4 && xhr.status == 200) {
			                        // 서버에서의 응답 처리
			                       /*  console.log(xhr.responseText); */
			                        alert(xhr.responseText);
			                    }
			                };

			                // 데이터 전송
			                xhr.send(data);
			            }
			            
			            // 비밀번호 변경
			            function pwmodify() {
			            	// 모달 내용을 변경하는 코드 예제
					        var modalContentText = document.getElementById('my_modal');
					        
					        // 요소가 존재하는지 확인
					        if (modalContentText) {
					        	// 이전 모달 내용 저장
					        	modalHistory.push(modalContentText.innerHTML);
					        	// 새로운 모달 내용 설정
					            modalContentText.innerHTML = '<div>' +
					            '<label for="loginPw">기존 비밀번호: </label>' +
					            '<input type="text" class="input input-ghost w-full max-w-xs autocomplete="off" name="loginPw" style="height: 25px; width: 145px;" required/>' +
					            '</div>' +
					            '<div>' +
					            '<label for="new_loginPw">새로운 비밀번호: </label>' +
					            '<input type="text" class="input input-ghost w-full max-w-xs autocomplete="off" name="new_loginPw" style="height: 25px; width: 170px;" required/>' +
					            '</div>' +
					            '<a class="modal_close_btn" onclick="closeModal()">Χ</a>' +
					            '<div class="modal_content">' +
					            '<button class="modal_button" onclick="dopwmodify()">수정</button>' +
					            '<button class="modal_button" onclick="goBack()">뒤로가기</button>' +
					            '</div>';
					        }
					    }
			            
			            function dopwmodify() {
			                // 모달 내용에서 필요한 값들을 가져옴
			                var loginPw = document.getElementsByName("loginPw")[0].value;
			                var new_loginPw = document.getElementsByName("new_loginPw")[0].value;
			                
			                // AJAX를 이용하여 서버에 데이터 전송
			                var xhr = new XMLHttpRequest();
			                xhr.open("POST", '../member/dopwModify', true);
			                xhr.setRequestHeader("Content-Type", "application/json");

			                // 전송할 데이터를 JSON 형태로 변환
			                var data = JSON.stringify({
			                    loginPw: loginPw,
			                    new_loginPw: new_loginPw,
			                });

			                xhr.onreadystatechange = function () {
			                    if (xhr.readyState == 4 && xhr.status == 200) {
			                        // 서버에서의 응답 처리
			                       /*  console.log(xhr.responseText); */
			                        alert(xhr.responseText);
			                    }
			                };

			                // 데이터 전송
			                xhr.send(data);
			                closeModal();
			            }
			            
			            // 모달닫기
			            function closeModal() {
			                // 모달과 배경 요소를 찾기
			                var modal = document.getElementById('my_modal');
			                
			             // 모달이 존재하는지 확인 후 제거
			                if (modal) {
			                    modal.style.display = 'none';
			                }

			                // 수정: 반환된 배경 요소 제거
			                var bg = document.querySelector('.modal_bg');
			                if (bg) {
			                    bg.remove();
			                }
			                window.location.reload();
			            }
			            
			           /*  function modify() {
			            	window.location.href = '../member/doModify';
			            } */
			            
			            // 뒤로가기
			            function goBack() {
			                // 브라우저 히스토리에서 뒤로가기를 누를 때 이전 모달 내용을 불러와서 설정
			                var modalContentText = document.getElementById('my_modal');
			                if (modalHistory.length > 0) {
			                    modalContentText.innerHTML = modalHistory.pop();
			                }
			            }

			            // 로그아웃
			            function logout() {
			                if (confirm('로그아웃 할래?')) {
			                    window.location.href = '../member/doLogout';
			                }
			            }
			            
			            // 회원탈퇴
			            function del() {
			            	// 모달 내용을 변경하는 코드 예제
					        var modalContentText = document.getElementById('my_modal');
					        
					        // 요소가 존재하는지 확인
					        if (modalContentText) {
					        	// 이전 모달 내용 저장
					        	modalHistory.push(modalContentText.innerHTML);
					        	// 새로운 모달 내용 설정
					            modalContentText.innerHTML = '<div>' +
					            '<label for="loginPw">비밀번호 확인: </label>' +
					            '<input type="text" class="input input-ghost w-full max-w-xs autocomplete="off" name="loginPw" style="height: 25px; width: 145px;" required/>' +
					            '</div>' +
					            '<div class = "text-xs" style="color: #a32222">※ 회원 탈퇴 시 계정 복구가 불가능합니다.</div>' +
					            '<a class="modal_close_btn" onclick="closeModal()">Χ</a>' +
					            '<div class="modal_content">' +
					            '<button class="modal_button" onclick="dodel()">탈퇴</button>' +
					            '<button class="modal_button" onclick="goBack()">뒤로가기</button>' +
					            '</div>';
					        }
					    }
			            
			            function dodel() {
			                // 모달 내용에서 필요한 값들을 가져옴
			                var loginPw = document.getElementsByName("loginPw")[0].value;
			                
			                // AJAX를 이용하여 서버에 데이터 전송
			                var xhr = new XMLHttpRequest();
			                xhr.open("POST", '../member/dodel', true);
			                xhr.setRequestHeader("Content-Type", "application/json");
							console.log(loginPw);
			                // 전송할 데이터를 JSON 형태로 변환
			                var data = JSON.stringify({
			                    loginPw: loginPw,
			                });

			                xhr.onreadystatechange = function () {
			                    if (xhr.readyState == 4 && xhr.status == 200) {
			                        // 서버에서의 응답 처리
			                       /*  console.log(xhr.responseText); */
			                        alert(xhr.responseText);
			                    }
			                };

			                // 데이터 전송
			                xhr.send(data);
			                closeModal();
			            }
			            
			         	// 전화번호 입력 시 숫자만 입력 가능하고 최대 11자리 가능
			            function validateContactNumber(input) {
			                // 숫자만 포함된 정규표현식
			                var regex = /^[0-9]+$/;

			                // 입력된 값에서 숫자만 추출
			                var numericValue = input.value.replace(/\D/g, '');

			                // 정규표현식에 맞지 않는 경우 입력값을 재설정
			                if (!regex.test(numericValue)) {
			                    input.value = numericValue.substring(0, numericValue.length - 1);
			                }
			            }
			            
			    		// 오늘 날짜 이후 선택 불가능
			            function updateMaxDate() {
			                var today = new Date().toISOString().split('T')[0];
			                document.getElementById('birth').max = today;
			            }
			  
			        </script>

				</c:if>
			</ul>
		</div>
	</header>
</body>

<%-- <h1>${pageTitle }</h1> --%>